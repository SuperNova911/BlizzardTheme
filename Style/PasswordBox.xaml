<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BlizzardTheme.Style">
    
    <!--Style-->
    <Style x:Key="BlizzPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{StaticResource Blizz.TextBox.Background.Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource Blizz.TextBox.BorderBrush.Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource Blizz.TextBox.Foreground.Normal}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Blizz.TextBox.SelectionBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource Blizz.TextBox.CaretBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinHeight" Value="34" />
        <Setter Property="Padding" Value="6,7,6,8" />
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Blizz.TextBox.Background.Hover}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Blizz.TextBox.BorderBrush.Hover}"/>
                            <Setter Property="Foreground" Value="{StaticResource Blizz.TextBox.Foreground.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource Blizz.TextBox.Background.Focused}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Blizz.TextBox.BorderBrush.Focused}"/>
                            <Setter Property="Foreground" Value="{StaticResource Blizz.TextBox.Foreground.Focused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Blizz.TextBox.Background.Disabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Blizz.TextBox.BorderBrush.Disabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource Blizz.TextBox.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="Red"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>